<?xml version="1.0"?>

<!--
	this is a template configuration file
	please rename this template to "config.xml" if you want to use it
	for the client
-->
<config version="0.501">

	<!--
		in this section general options are configured
	-->
	<general>

		<!--
			the settings for the logfile
			file - absolute path to the logfile
			level - valid log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
		-->
		<log
			file="/absolute/path/to/logfile.log"
			level="INFO" />

		<!--
			the settings for the server
			host - location/address of the server
			port - port that is used by the server
			caFile - path to the CA file to check the correctness of the
				used SSL connection
		-->
		<server
			host="server.h4des.org"
			port="12345"
			caFile="/absolute/path/to/server_CA.pem" />

		<!--
			the settings for a client certificate
			certificateRequired - sets if it is required for the client
				to authenticate itself via a certificate or not
				(if you have the alert system reachable from the internet
				you should use client certificates)
				("True" or "False")
			certFile - path to the certificate file of the client
				this is used for the SSL connection
				(only processed if "certificateRequired" is set to "True")
			keyFile - path to the key file of the client that is used
				for the SSL connection
				(only processed if "certificateRequired" is set to "True")
		-->
		<client
			certificateRequired="True"
			certFile="/absolute/path/to/client.crt"
			keyFile="/absolute/path/to/client.key" />

		<!--
			user credentials of this client
			(WARNING: have to be unique for each client or strange
			behavior will happen)
			username - the username
			password - the password (thanks cpt obvious ...)
		-->
		<credentials
			username="user"
			password="pass" />

		<!--
			Connection settings.
			persistent - Flag that indicates if this client is considered
				to have a persistant connection to the server. This means
				that if this client disconnects from the server, the server
				will consider this as a fail state and will invoke an alarm.
				("True" or "False")
		-->
		<connection
			persistent="True" />

	</general>


	<!--
		in this section options for email alerts are configured
	-->
	<smtp>

		<!--
			the general settings of the email notifications
			activated - are email alerts active? ("True" or "False")
			fromAddr - email address from which this email should be sent
			toAddr - email address to which the email should be sent
		-->
		<general
			activated="True"
			fromAddr="alertSystem@h4des.org"
			toAddr="youraddress@somehost.de" />

		<!--
			the server settings of the email notifications
			host - address of the used smtp server
				(only 127.0.0.1 supported at the moment)
			port - port of the used smtp server
		-->
		<server
			host="127.0.0.1"
			port="25" />

	</smtp>


	<!--
		in this section the options of the update process are configured
	-->
	<update>

		<!--
			the server settings of the update process (only change these
				settings if you want to use your own repository and not
				the alertR master repository on github)
			host - address of the used web server
				NOTE: the update process uses HTTPS and does not allow HTTP
			port - port of the used web server
			location - the location of the used alertR repository
			caFile - the location of the CA/certificate file that is used
				to validate the HTTPS connection
				NOTE: the given location works for github on Debian like
				distributions
		-->
		<server
			host="raw.githubusercontent.com"
			port="443"
			location="/sqall01/alertR/master/"
			caFile="/etc/ssl/certs/DigiCert_High_Assurance_EV_Root_CA.pem" />

	</update>


	<!--
		section of all alerts that could be triggered
	-->
	<alerts>

		<!--
			a single alert is configured in an "alert" element
			if you need additional alerts just add a new one
		-->
		<alert>

			<!--
				the general configuration of an alert
				id - local id of this alert (has to be unique on this client)
				description - description of this alert
			-->
			<general
				id="0"
				description="first executer alert" />

			<!--
				the alert level of the current configured alert
				(an alert must have one but can have multiple alert levels)
			-->
			<alertLevel>0</alertLevel>
			<alertLevel>1</alertLevel>
			<alertLevel>5</alertLevel>
			<alertLevel>32</alertLevel>
			<alertLevel>6</alertLevel>

			<!--
				executer specific settings
				execute - the command/program that should be executed when
					a sensor alert was triggered (or all alerts are stopped)
			-->
			<executer
				execute="/absolute/path/to/command.sh">

				<!--
					the arguments that are used for the command that
					is executed when a sensor alert was triggered
					(the amount of arguments are variable)
				-->
				<triggerArgument>startArg1</triggerArgument>
				<triggerArgument>startArg2</triggerArgument>
				<triggerArgument>startArg3</triggerArgument>

				<!--
					the arguments that are used for the command that
					is executed when a all alerts are stopped
					(the amount of arguments are variable)
				-->
				<stopArgument>stopArg1</stopArgument>
				<stopArgument>stopArg2</stopArgument>
			</executer>

		</alert>


		<!--
			a single alert is configured in an "alert" element
			if you need additional alerts just add a new one
		-->
		<alert>

			<!--
				the general configuration of an alert
				id - local id of this alert (has to be unique on this client)
				description - description of this alert
			-->
			<general
				id="1"
				description="second executer alert" />

			<!--
				the alert level of the current configured alert
				(an alert must have one but can have multiple alert levels)
			-->
			<alertLevel>1</alertLevel>

			<!--
				executer specific settings
				execute - the command/program that should be executed when
					a sensor alert was triggered (or all alerts are stopped)
			-->
			<executer
				execute="/absolute/path/to/second/command.sh">
			</executer>

		</alert>

	</alerts>

</config>