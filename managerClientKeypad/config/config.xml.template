<?xml version="1.0"?>

<!--
	this is a template configuration file
	please rename this template to "config.xml" if you want to use it
	for the client
-->
<config version="0.500">

	<!--
		in this section general options are configured
	-->
	<general>

		<!--
			the settings for the logfile
			file - absolute path to the logfile
			level - valid log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
		-->
		<log
			file="/absolute/path/to/logfile.log"
			level="INFO" />

		<!--
			the settings for the server
			host - location/address of the server
			port - port that is used by the server
			caFile - path to the CA file to check the correctness of the
				used SSL connection
		-->
		<server
			host="server.h4des.org"
			port="12345"
			caFile="/absolute/path/to/server_CA.pem" />

		<!--
			the settings for a client certificate
			certificateRequired - sets if it is required for the client
				to authenticate itself via a certificate or not
				(if you have the alert system reachable from the internet
				you should use client certificates)
				("True" or "False")
			certFile - path to the certificate file of the client
				this is used for the SSL connection
				(only processed if "certificateRequired" is set to "True")
			keyFile - path to the key file of the client that is used
				for the SSL connection
				(only processed if "certificateRequired" is set to "True")
		-->
		<client
			certificateRequired="True"
			certFile="/absolute/path/to/client.crt"
			keyFile="/absolute/path/to/client.key" />

		<!--
			user credentials of this client
			(WARNING: have to be unique for each client or strange
			behavior will happen)
			username - the username
			password - the password (thanks cpt obvious ...)
		-->
		<credentials
			username="user"
			password="pass" />

		<!--
			Connection settings.
			persistent - Flag that indicates if this client is considered
				to have a persistant connection to the server. This means
				that if this client disconnects from the server, the server
				will consider this as a fail state and will invoke an alarm.
				("True" or "False")
		-->
		<connection
			persistent="True" />

	</general>


	<!--
		in this section options for email alerts are configured
	-->
	<smtp>

		<!--
			the general settings of the email notifications
			activated - are email alerts active? ("True" or "False")
			fromAddr - email address from which this email should be sent
			toAddr - email address to which the email should be sent
		-->
		<general
			activated="True"
			fromAddr="alertSystem@h4des.org"
			toAddr="youraddress@somehost.de" />

		<!--
			the server settings of the email notifications
			host - address of the used smtp server
				(only 127.0.0.1 supported at the moment)
			port - port of the used smtp server
		-->
		<server
			host="127.0.0.1"
			port="25" />

	</smtp>


	<!--
		in this section the options of the update checking are configured
	-->
	<update>

		<!--
			the general settings of the update checking
			activated - should the client check for updates?
				("True" or "False")
			interval - the interval in seconds in which the client checks
				online for updates
			emailNotification - should an email notification be sent to the
				user if a new version is available? ("True" or "False")
				NOTE: this option only works if smtp is activated
				NOTE: if this option is deactivated, the client will only
				output the notification about the new version into the log file
		-->
		<general
			activated="True"
			interval="86400"
			emailNotification="True" />

		<!--
			the server settings of the update checking (only change these
				settings if you want to use your own repository and not
				the alertR master repository on github)
			host - address of the used web server
				NOTE: the update checking uses HTTPS and does not allow HTTP
			port - port of the used web server
			location - the location of the used alertR repository
			caFile - the location of the CA/certificate file that is used
				to validate the HTTPS connection
				NOTE: the given location works for github on Debian like
				distributions
		-->
		<server
			host="raw.githubusercontent.com"
			port="443"
			location="/sqall01/alertR/master/"
			caFile="/etc/ssl/certs/DigiCert_High_Assurance_EV_Root_CA.pem" />

	</update>


	<!--
		section of manager specific settings
	-->
	<manager>

		<!--
			the general settings of the manager client
			description - description of the client
		-->
		<general
			description="test manager" />

		<!--
			audio specific settings
			enabled - should the client output audio? ("True" or "False")
		-->
		<audio
			enabled="True" />

		<!--
			keypad specific settings
			timeDelayedActivation - this value gives the seconds of the 3rd
				option (delayed activation of the alert system) which are used
				to activate the alert system after the given time
		-->
		<keypad
			timeDelayedActivation="30">

			<!--
				a single pin that is configured to login to the manager
				if you need additional pins just add a new one
			-->
			<pin>1234</pin>
			<pin>2354</pin>

		</keypad>

		<!--
			sensor warning states settings

			Configure sensor states which result in a warning that the
			user has to confirm before the alarm system can be activated
			by this manager client. For example, if a window sensor indicates
			that the window is open and this manager client should warn the
			user that the window is open before it activates the system.
		-->
		<sensorwarningstates>

			<!--
				A sensor state that results in a warning by this client
				if it is used to activate the alarm system (the number of
				sensors is variable, add or remove as many as you need). 

				username - the username of the sensor client that
					handles this sensor
				remoteSensorId - the sensor id of the sensor that is
					configured on the client side
				warningState - the state the sensor has to have in order
					to get a warning
					("True" or "False")
					(True means "triggered" state; False means "normal" state)
			-->
			<sensor
				username="windowsensor"
				remoteSensorId="0"
				warningState="True" />

			<!--
				A sensor state that results in a warning by this client
				if it is used to activate the alarm system (the number of
				sensors is variable, add or remove as many as you need). 

				username - the username of the sensor client that
					handles this sensor
				remoteSensorId - the sensor id of the sensor that is
					configured on the client side
				warningState - the state the sensor has to have in order
					to get a warning
					("True" or "False")
					(True means "triggered" state; False means "normal" state)
			-->
			<sensor
				username="windowsensor"
				remoteSensorId="1"
				warningState="True" />

		</sensorwarningstates>

	</manager>

</config>